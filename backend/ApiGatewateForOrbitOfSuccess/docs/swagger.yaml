basePath: /api/v1
definitions:
  authv1.ActivateAccountResponse:
    properties:
      success:
        type: boolean
    type: object
  authv1.ChangePasswordResponse:
    properties:
      success:
        type: boolean
    type: object
  authv1.LoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  authv1.LogoutResponse:
    properties:
      success:
        type: boolean
    type: object
  authv1.RefreshResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  authv1.RegisterResponse:
    properties:
      success:
        type: boolean
    type: object
  authv1.SendPasswordLinkResponse:
    properties:
      success:
        type: boolean
    type: object
  coursev1.Course:
    properties:
      description:
        type: string
      difficulty:
        type: string
      duration:
        type: integer
      full_description:
        type: string
      id:
        type: integer
      image:
        type: string
      title:
        type: string
      work:
        type: string
    type: object
  coursev1.GetCourseResponse:
    properties:
      description:
        type: string
      difficulty:
        type: string
      duration:
        type: integer
      full_description:
        type: string
      id:
        type: integer
      image:
        type: string
      themes:
        items:
          $ref: '#/definitions/coursev1.Theme'
        type: array
      title:
        type: string
      work:
        type: string
    type: object
  coursev1.GetResponse:
    properties:
      courses:
        items:
          $ref: '#/definitions/coursev1.Course'
        type: array
    type: object
  coursev1.Lesson:
    properties:
      content:
        type: string
      duration:
        type: integer
      id:
        type: integer
      task:
        type: string
      title:
        type: string
      type:
        type: string
    type: object
  coursev1.SuccessResponse:
    properties:
      success:
        type: boolean
    type: object
  coursev1.Theme:
    properties:
      id:
        type: integer
      lessons:
        items:
          $ref: '#/definitions/coursev1.Lesson'
        type: array
      title:
        type: string
    type: object
  entities.ActivateAccountRequest:
    properties:
      link:
        type: string
    required:
    - link
    type: object
  entities.ChangePasswordRequest:
    properties:
      link:
        type: string
      password:
        maxLength: 50
        minLength: 8
        type: string
    required:
    - link
    - password
    type: object
  entities.CreateLesson:
    properties:
      content:
        type: string
      duration:
        type: integer
      task:
        type: string
      title:
        type: string
      type:
        type: string
    required:
    - content
    - duration
    - task
    - title
    - type
    type: object
  entities.CreateRequest:
    properties:
      description:
        type: string
      difficulty:
        type: string
      duration:
        type: integer
      full_description:
        type: string
      image:
        type: string
      themes:
        items:
          $ref: '#/definitions/entities.CreateTheme'
        type: array
      title:
        type: string
      work:
        type: string
    required:
    - description
    - difficulty
    - full_description
    - title
    - work
    type: object
  entities.CreateTheme:
    properties:
      lessons:
        items:
          $ref: '#/definitions/entities.CreateLesson'
        type: array
      title:
        type: string
    required:
    - title
    type: object
  entities.FileResp:
    properties:
      filename:
        type: string
      url:
        type: string
    type: object
  entities.LoginRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 50
        minLength: 8
        type: string
      username:
        type: string
    required:
    - password
    type: object
  entities.LogoutRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  entities.RefreshRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  entities.RegisterRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 50
        minLength: 8
        type: string
      username:
        maxLength: 20
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
  entities.SendPasswordLinkRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  entities.UpdateLesson:
    properties:
      content:
        type: string
      duration:
        type: integer
      id:
        type: integer
      task:
        type: string
      title:
        type: string
      type:
        type: string
    type: object
  entities.UpdateRequest:
    properties:
      description:
        type: string
      difficulty:
        type: string
      duration:
        type: integer
      full_description:
        type: string
      id:
        type: integer
      image:
        type: string
      themes:
        items:
          $ref: '#/definitions/entities.UpdateTheme'
        type: array
      title:
        type: string
      work:
        type: string
    type: object
  entities.UpdateTheme:
    properties:
      id:
        type: integer
      lessons:
        items:
          $ref: '#/definitions/entities.UpdateLesson'
        type: array
      title:
        type: string
    type: object
  entities.UploadResponse:
    properties:
      files:
        items:
          $ref: '#/definitions/entities.FileResp'
        type: array
    type: object
  entities.UserUpdateRequest:
    properties:
      firstname:
        type: string
      gender:
        type: string
      icon_url:
        type: string
      lastname:
        type: string
      middlename:
        type: string
      phone:
        type: string
    required:
    - firstname
    - gender
    - lastname
    - middlename
    - phone
    type: object
  userv1.GetInfoResponse:
    properties:
      firstname:
        type: string
      gender:
        type: string
      icon_url:
        type: string
      lastname:
        type: string
      middlename:
        type: string
      phone:
        type: string
    type: object
  userv1.UpdateInfoResponse:
    properties:
      success:
        type: boolean
    type: object
host: cookhub.space
info:
  contact: {}
  description: API Gatewate for orbit of success services
  title: API Gatewate
  version: "1.0"
paths:
  /auth/activate_account:
    post:
      consumes:
      - application/json
      description: Activate account
      operationId: Activate account
      parameters:
      - description: activate
        in: body
        name: activate
        schema:
          $ref: '#/definitions/entities.ActivateAccountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authv1.ActivateAccountResponse'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      summary: Activate account
      tags:
      - Auth
  /auth/change_password:
    post:
      consumes:
      - application/json
      description: Change password
      operationId: Change password
      parameters:
      - description: password
        in: body
        name: password
        schema:
          $ref: '#/definitions/entities.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authv1.ChangePasswordResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      summary: Change password
      tags:
      - Auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login
      operationId: Login
      parameters:
      - description: login
        in: body
        name: login
        schema:
          $ref: '#/definitions/entities.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authv1.LoginResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      summary: Login
      tags:
      - Auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Logout
      operationId: Logout
      parameters:
      - description: logout
        in: body
        name: logout
        schema:
          $ref: '#/definitions/entities.LogoutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authv1.LogoutResponse'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      summary: Logout
      tags:
      - Auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh token
      operationId: Refresh token
      parameters:
      - description: refresh
        in: body
        name: refresh
        schema:
          $ref: '#/definitions/entities.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authv1.RefreshResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      summary: Refresh token
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register
      operationId: Register
      parameters:
      - description: register
        in: body
        name: register
        schema:
          $ref: '#/definitions/entities.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authv1.RegisterResponse'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      summary: Register
      tags:
      - Auth
  /auth/send_password_link:
    post:
      consumes:
      - application/json
      description: Send password link
      operationId: Send password link
      parameters:
      - description: email
        in: body
        name: email
        schema:
          $ref: '#/definitions/entities.SendPasswordLinkRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authv1.SendPasswordLinkResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      summary: Send password link
      tags:
      - Auth
  /course:
    get:
      description: Get all
      operationId: Get all
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/coursev1.GetResponse'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      summary: Get all
      tags:
      - Course
    post:
      consumes:
      - application/json
      description: Create
      operationId: Create
      parameters:
      - description: create
        in: body
        name: create
        schema:
          $ref: '#/definitions/entities.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/coursev1.SuccessResponse'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      summary: Create
      tags:
      - Course
    put:
      consumes:
      - application/json
      description: Update
      operationId: Update
      parameters:
      - description: update
        in: body
        name: update
        schema:
          $ref: '#/definitions/entities.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/coursev1.SuccessResponse'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      summary: Update
      tags:
      - Course
  /course/{id}:
    delete:
      description: Delete
      operationId: Delete
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/coursev1.SuccessResponse'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      summary: Delete
      tags:
      - Course
    get:
      description: Get
      operationId: Get
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/coursev1.GetCourseResponse'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      summary: Get
      tags:
      - Course
  /media/upload:
    post:
      consumes:
      - multipart/form-data
      description: Upload media
      operationId: Upload media
      parameters:
      - collectionFormat: csv
        description: files
        in: formData
        items:
          type: file
        name: files
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.UploadResponse'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      summary: Upload media
      tags:
      - media
  /user/{id}:
    get:
      consumes:
      - application/json
      description: Get user info
      operationId: Get user info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userv1.GetInfoResponse'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      summary: Get user info
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update user info
      operationId: Update user info
      parameters:
      - description: info
        in: body
        name: info
        schema:
          $ref: '#/definitions/entities.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userv1.UpdateInfoResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      security:
      - ApiKeyAuth: []
      summary: Update user info
      tags:
      - User
schemes:
- https
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
